source ~/.exrc
let s:runtimepath_first = split(&runtimepath, ',')[0]
let &runtimepath .= ',' . s:runtimepath_first . '/repos/github.com/Shougo/dein.vim'
try
	call dein#begin(s:runtimepath_first)
	call dein#add('Shougo/dein.vim')
	call dein#add('thinca/vim-quickrun')
	call dein#add('tomasr/molokai')
	call dein#end()
	if dein#check_install()
		call dein#install()
	endif
catch /E117.*/
endtry
set title
set ruler
set nowrap
set cursorline
set showtabline=1
set ambiwidth=double
set showcmd
set laststatus=2
set shortmess+=mrwI
set modeline
set modelines=5
set history=10000
set wildmenu
set wildmode=longest,list:longest,list:full
set wildoptions=tagfile
set backspace=indent,eol,start
set hidden
set helplang=ja,en
set ignorecase
set smartcase
set incsearch
set hlsearch
map  :nohl
set noundofile
set nobackup
set nowritebackup
set browsedir=buffer
set list
set listchars=tab:Â»-,trail:-,extends:Â»,precedes:Â«,nbsp:%,eol:â†²
set splitbelow
set splitright
set smarttab
set cindent
set showfulltag
set tags^=./.tags;,./.TAGS;,./tags;,./TAGS;,.tags;,.TAGS;,tags;,TAGS;
set clipboard=unnamed,unnamedplus,autoselect
set virtualedit=block
if executable('hw')
	set grepprg=hw\ -e\ $*\ /dev/null
elseif executable('pt')
	set grepprg=pt\ $*\ /dev/null
elseif executable('ag')
	set grepprg=ag\ $*\ /dev/null
endif
if has('mouse')
	set mouse=a
	set nomousehide
	set mousemodel=popup_setpos
endif
if has('eval')
	function! FlagToStr(var, val)
		if a:var | return a:val | else | return '' | endif
	endfunction
	set statusline=%{printf('[%2d\|%2s%1s][%3s\|%s][%1s]',bufnr('%'),FlagToStr(&readonly,'RO'),FlagToStr(&modified,'+'),&fileencoding,&fileformat,&filetype)}\ %<%F\ %h%wc:%05b(0x%04B)%=(%l,%3c%V)%3p%%\ of\ %L\ lines%a[%P]
endif
function! MyTabLine()
	let s = ''
	for i in range(tabpagenr('$'))
		if i + 1 == tabpagenr() | let s .= '%#TabLineSel#' | else | let s .= '%#TabLine#' | endif
		let s .= '%' . (i + 1) . 'T'
		let s .= ' %{MyTabLabel(' . (i + 1) . ')} '
	endfor
	let s .= '%#TabLineFill#%T'
	if tabpagenr('$') > 1 | let s .= '%=%#TabLine#%999Xclose' | endif
	return s
endfunction
function! MyTabLabel(n)
	let buflist = tabpagebuflist(a:n)
	let winnr = tabpagewinnr(a:n)
	return printf('[%5.20S]', bufname(buflist[winnr - 1]))
endfunction
set tabline=%!MyTabLine()
if has('syntax') | syntax on | endif
if has('filetype') | filetype plugin indent on | endif
if has('insert_expand') | set completeopt=menu,preview,longest | endif
if has('windows') && has('folding') | set fillchars=diff:\  | endif
if has('diff') | set diffopt=filler,vertical,foldcolumn:2 | endif
if has('autocmd')
	augroup BufWin
		autocmd!
		autocmd BufWinLeave ?* silent mkview
		autocmd BufWinEnter ?* silent! loadview
	augroup END
	augroup QuickFixCmd
		autocmd!
		autocmd QuickFixCmdPost *grep* cwindow
	augroup END
	augroup BufRead
		autocmd!
		autocmd BufNewfile,BufReadPost * runtime after/syntax/text.vim
	augroup END
endif
runtime vimrc.local.vim
